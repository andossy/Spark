This is a sandbox test directory for the calcium spark software. 

General usage for the software:

1) Make and copy application to present directory

  ./make_and_copy.sh

2) Basic run instructions:

  ./calcium_sparks --geometry_file=test_geometry_xy_28_z_28_N_RyR_5_double.h5 \
                   --species_file=parameters_double.h5 -t 0.1 -o 0.01 -h 12 \
                   -O ryr 0 1 2 3 4 -T 6.86e-04 -D 6.86e-04 -v

Minimal arguments needed to to run a simulation are the geometry and the 
species file arguments:

   --geometry_file=test_geometry_xy_28_z_28_N_RyR_5_double.h5
   --species_file=parameters_double.h5

These h5 files can be changed and re-generated by different python scripts 
provided in this folder.

End time is controlled by: 

   -t 0.1 # In ms

Frequency of output data is controlled by:

  -o 0.01 # In ms

Spatial simulation resolution is controlled by:

  -h 12 # nm

This value can be anything. However it will be adjusted to the
resolution of the geometry. For example: If the geometry resolution is
10 nm then a given simulation resolution: -h X, will be adjusted so
that h_geom % h_adjust = 0. So again assuming the resolution of the
geometry is 10 nm, we will have the following simulation resolution:

  -h 12  -> simulation resolution = 10
  -h 3   -> simulation resolution = 3.333
  -h 2.5 -> simulation resolution = 2.5

Forcing the Ryanodine receptors (RyRs) to be open at start is done using:

  -O ryr 0 1 2 3 4

Here 5 RyRs are forced to be open at start. In a general case, the -O option
can be used as:

  -O name_1 num11 num12 num13 ... name_2 num21 num22 num23 ... ...

Evaluation of the stochastic Markov models for the RyRs can be
expensive (at least the scatter and gather communication can be). To
update the RyRs on a coarser time step use:

  -D 6.86e-04

If this time step is lower than the smallest simulation time step the
larger simulation time step is used.

For deterministic runs close time for the RyRs can be forced. This is done by:

  -C 0.5 

Reactions are updated each time step. That can be expensive and not
necessary. Reaction can be evaluated at a coarser time step by:

  -T 6.86e-04

If this time step is lower than the smallest simulation time step the
larger simulation time step is used.

Splitting processes is possible in directions XY, YZ or XZ, but then the number
of processors must be a quadratic number. Splitting processes in all three XYZ
directions is also possible, but then the number of processes must be a cubic
number. The default setting is XY, and the this feautre can be controlled by

  -p XZ

In order to split processes in all XYZ directions with different numbers of
processes use:

  --mpi_dist 4 5 2

It uses a total number of 4*5*2 (=40) processes to split the problem. Be aware
that it overwrites the -p option. By default it is switched off.
